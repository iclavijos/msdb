{
  "name": "motorsports-database",
  "version": "5.5.0",
  "description": "Database application to store any form of motorsport result. At the moment, rallies are out of the scope",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./gradlew",
    "backend:build-cache": "npm run backend:info && npm run backend:nohttp:test && npm run ci:e2e:package",
    "backend:doc:test": "./gradlew javadoc -x webapp",
    "backend:info": "./gradlew -v",
    "backend:nohttp:test": "./gradlew checkstyleNohttp -x webapp",
    "backend:start": "./gradlew -x webapp",
    "backend:unit:test": "./gradlew test integrationTest -x webapp -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.icesoft.msdb=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "yarn run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch' npm:backend:start",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "postci:e2e:package": "cp build/libs/*.$npm_package_config_packaging e2e.$npm_package_config_packaging",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar e2e.$npm_package_config_packaging --spring.profiles.active=$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.icesoft.msdb=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "ci:server:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment",
    "clean-www": "rimraf build/resources/main/static/app/{src,build/}",
    "cleanup": "rimraf build/resources/main/static/",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/mysql.yml down -v --remove-orphans",
    "docker:db:up": "docker-compose -f src/main/docker/mysql.yml up -d",
    "docker:elasticsearch:down": "docker-compose -f src/main/docker/elasticsearch.yml down -v --remove-orphans",
    "docker:elasticsearch:up": "docker-compose -f src/main/docker/elasticsearch.yml up -d",
    "docker:keycloak:down": "docker-compose -f src/main/docker/keycloak.yml down -v --remove-orphans",
    "docker:keycloak:up": "docker-compose -f src/main/docker/keycloak.yml up -d",
    "docker:others:await": "echo \"Waiting for Elasticsearch to start\" && wait-on \"http-get://localhost:9200/_cluster/health?wait_for_status=green&timeout=60s\" && echo \"Elasticsearch started\" && echo \"Waiting for keycloak to start\" && wait-on http-get://localhost:9080/auth/realms/jhipster -t 30000 && echo \"keycloak started\" || echo \"keycloak not running, make sure oauth2 server is running\"",
    "docker:others:down": "npm run docker:keycloak:down && npm run docker:elasticsearch:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:keycloak:up && npm run docker:elasticsearch:up",
    "java:docker": "./gradlew bootJar jibDockerBuild",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./gradlew bootJar -x test -x integrationTest",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./gradlew bootWar -Pwar -x test -x integrationTest",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "yarn run lint -- --fix",
    "prepare": "husky install",
    "prettier:check": "prettier --check \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "serve": "yarn run start --",
    "start": "ng serve --hmr",
    "start-tls": "yarn run webapp:dev-ssl",
    "pretest": "yarn run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "yarn run test -- --watch",
    "watch": "concurrently npm:start npm:backend:start",
    "webapp:build": "yarn run clean-www && yarn run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-ssl": "ng serve --ssl",
    "webapp:dev-verbose": "ng serve --verbose",
    "webapp:prod": "yarn run clean-www && yarn run webapp:build:prod",
    "webapp:test": "yarn run test --"
  },
  "config": {
    "backend_port": "8080",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular/animations": "^13.1.1",
    "@angular/cdk": "^13.1.1",
    "@angular/common": "13.1.1",
    "@angular/compiler": "13.1.1",
    "@angular/core": "13.1.1",
    "@angular/forms": "13.1.1",
    "@angular/localize": "13.1.1",
    "@angular/material": "^13.1.1",
    "@angular/material-moment-adapter": "^13.1.1",
    "@angular/platform-browser": "13.1.1",
    "@angular/platform-browser-dynamic": "13.1.1",
    "@angular/platform-server": "13.1.1",
    "@angular/router": "13.1.1",
    "@fortawesome/angular-fontawesome": "0.10.1",
    "@fortawesome/fontawesome-svg-core": "^1.2.36",
    "@fortawesome/free-brands-svg-icons": "5.15.4",
    "@fortawesome/free-regular-svg-icons": "5.15.4",
    "@fortawesome/free-solid-svg-icons": "5.15.4",
    "@fullcalendar/angular": "^5.10.1",
    "@fullcalendar/bootstrap": "^5.10.1",
    "@fullcalendar/core": "^5.10.1",
    "@fullcalendar/daygrid": "^5.10.1",
    "@fullcalendar/interaction": "^5.10.1",
    "@fullcalendar/list": "^5.10.1",
    "@fullcalendar/moment": "^5.10.1",
    "@fullcalendar/moment-timezone": "^5.10.1",
    "@fullcalendar/timegrid": "^5.10.1",
    "@fullcalendar/timeline": "^5.10.1",
    "@mdi/font": "^6.5.95",
    "@ng-bootstrap/ng-bootstrap": "11.0.0",
    "@ngx-translate/core": "14.0.0",
    "@ngx-translate/http-loader": "7.0.0",
    "ajv": "8.6.1",
    "arrive": "2.4.1",
    "bootstrap": "4.6.1",
    "bootstrap-material-design": "4.1.3",
    "bootstrap-notify": "3.1.3",
    "chart.js": "3.1.0",
    "chartist": "0.11.4",
    "chartjs-plugin-annotation": "^1.2.2",
    "classlist.js": "1.1.20150312",
    "core-js": "3.19.0",
    "dayjs": "1.10.7",
    "hammerjs": "2.0.8",
    "icofont": "file:../icofont",
    "jquery": "3.6.0",
    "material-design-icons": "^3.0.1",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.31",
    "ng2-charts": "1.6.0",
    "ngx-clipboard": "12.3.1",
    "ngx-color-picker": "^11.0.0",
    "ngx-cookie": "4.0.2",
    "ngx-infinite-scroll": "10.0.1",
    "ngx-toastr": "^12.1.0",
    "ngx-webstorage": "9.0.0",
    "perfect-scrollbar": "1.5.0",
    "popper.js": "1.16.1",
    "primeng": "^13.1.0",
    "primeicons": "^5.0.0",
    "rxjs": "6.6.7",
    "rxjs-compat": "6.6.3",
    "swagger-ui-dist": "4.1.2",
    "tslib": "^2.3.1",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "13.0.0",
    "@angular-builders/jest": "13.0.2",
    "@angular-devkit/build-angular": "~13.1.1",
    "@angular-eslint/eslint-plugin": "12.7.0",
    "@angular/cli": "13.1.2",
    "@angular/compiler-cli": "13.1.1",
    "@angular/service-worker": "13.1.1",
    "@asymmetrik/ngx-leaflet": "^8.1.0",
    "@types/bootstrap": "4.5.0",
    "@types/chartist": "0.11.1",
    "@types/jest": "27.0.3",
    "@types/jquery": "3.5.6",
    "@types/leaflet": "^1.7.8",
    "@types/node": "16.11.11",
    "@typescript-eslint/eslint-plugin": "5.9.0",
    "@typescript-eslint/parser": "5.9.0",
    "browser-sync": "2.27.7",
    "browser-sync-webpack-plugin": "2.3.0",
    "concurrently": "6.4.0",
    "copy-webpack-plugin": "10.0.0",
    "eslint": "7.32.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-webpack-plugin": "3.1.1",
    "folder-hash": "4.0.1",
    "generator-jhipster": "7.4.1",
    "husky": "7.0.4",
    "jest": "27.4.3",
    "jest-date-mock": "1.0.8",
    "jest-junit": "13.0.0",
    "jest-preset-angular": "10.1.0",
    "jest-sonar-reporter": "2.0.0",
    "lint-staged": "12.1.2",
    "merge-jsons-webpack-plugin": "2.0.1",
    "moment-locales-webpack-plugin": "1.2.0",
    "prettier": "2.5.0",
    "prettier-plugin-java": "1.6.0",
    "prettier-plugin-packagejson": "2.2.15",
    "rimraf": "3.0.2",
    "ts-jest": "27.0.7",
    "typescript": "4.5.4",
    "wait-on": "6.0.0",
    "webpack": "5.50.0",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-merge": "5.8.0",
    "webpack-notifier": "1.14.1"
  },
  "engines": {
    "node": ">=14.18.1"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "jestSonar": {
    "reportPath": "build/test-results/jest",
    "reportFile": "TESTS-results-sonar.xml"
  }
}
